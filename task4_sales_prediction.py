# -*- coding: utf-8 -*-
"""Task4 Sales prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KWc5FuP-Autbh6GcGOnCClJoItwIR-bn

**Sales Prediction Using Python**

**Task 4 : Problem Statement**

1.Sales prediction involves forcasting the amount of a product that customers will purchase, taking into account vairous factors such as advertising platform selection.

2.In bussiness that offer production or services, they utilize machine learning techniques in python to analyze and interpret data, allowing them to make informed decisions regarding advertising coasts. By leveraging these predictions, businesses can optimize their advertising strategies and maximize sales potential. Build a model according to requirements.
"""

#importing libraries

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression

# Loading the dataset

Df=pd.read_csv('/content/advertising.csv')

#Showing first 5 rows of dataframe
Df.head()

Df.shape

Df.info()

Df.isnull().sum()

Df.describe()

Df.columns

X=Df.drop(columns=['Sales'],axis=1)
Y=Df['Sales']

print(X)

print(Y)

# Spliting the training data and test data

X_train, X_test, Y_train, Y_test =train_test_split(X,Y, test_size=0.2, random_state= 2)

print(X.shape,X_train.shape,X_test.shape)

# model Training

model=LinearRegression()

model.fit(X_train,Y_train)

print('intercept:=b0', model.intercept_)
print('slope:=b1 & b2', model.coef_)

X_train_prediction=model.predict(X_train)

print(X_train_prediction)

r2=model.score(X_train, Y_train)

print(r2*100)

Prediction_model=[[100,100,100]]

print('**Sales of TV, Radio and Newspaper is** :', model.predict(Prediction_model))

